{"version":3,"sources":["webpack:///./src/components/PostTags.js","webpack:///./src/templates/post.js","webpack:///./src/utils/global.js"],"names":["PostTags","render","_this$props","this","props","tags","size","react_default","a","createElement","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase","Component","PostTemplate","thumbnail","slug","pageContext","postNode","data","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","childImageSharp","fixed","date","formatDate","twitterUrl","siteUrl","twitterShare","encodeURIComponent","title","userTwitter","layout","Helmet_default","siteTitle","SEO","postPath","postSEO","gatsby_image_default","href","target","rel","PostTags_PostTags","dangerouslySetInnerHTML","__html","html","pageQuery","__webpack_require__","d","__webpack_exports__","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_1__","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_1___default","moment","utc","format","dateFormat"],"mappings":"wMAIqBA,kLACnBC,OAAA,WAAS,IAAAC,EACgBC,KAAKC,MAApBC,EADDH,EACCG,KAAMC,EADPJ,EACOI,KAEd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZL,GACCA,EAAKM,IAAI,SAAAC,GAAG,OACVL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,IAAKF,EAAKG,MAAO,CAAEC,eAAgB,QAAUC,GAAE,SAAWC,IAAUN,GAArB,KACnDL,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,GAAOM,WATAO,mICMjBC,kLACnBnB,OAAA,WAAS,IAIHoB,EAHIC,EAASnB,KAAKC,MAAMmB,YAApBD,KACFE,EAAWrB,KAAKC,MAAMqB,KAAKC,eAC3BC,EAAOH,EAASI,YAGjBD,EAAKE,KACRF,EAAKE,GAAKP,GAGPK,EAAKG,cACRH,EAAKG,YAAcC,IAAOC,uBAGxBL,EAAKN,YACPA,EAAYM,EAAKN,UAAUY,gBAAgBC,OAG7C,IAAMC,EAAOC,YAAWT,EAAKQ,MACvBE,EAAU,gCAAmCN,IAAOO,QAA1C,IAAqDX,EAAKL,KAA1D,IACViB,EAAY,iCAAoCC,mBAAmBb,EAAKc,OAA5D,QAChBV,IAAOO,QADS,IAEdX,EAAKL,KAFS,SAEIS,IAAOW,YAE7B,OACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAWkB,EAAKc,MAAhB,MAA2BV,IAAOc,YAEpCtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKC,SAAUzB,EAAME,SAAUA,EAAUwB,SAAO,IAChDzC,EAAAC,EAAAC,cAAA,WAASC,UAAU,oBACjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAS,kBAAoBW,EAA6B,GAAjB,iBAC9CA,EAAYd,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAK0B,MAAOP,EAAKN,UAAUY,gBAAgBC,QAAY,KACpE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAKkB,EAAKc,OACVlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQyB,GAD1B,IAEE5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAewC,KAAMX,EAAcY,OAAO,SAASC,IAAI,uBAApE,qBAIF7C,EAAAC,EAAAC,cAAC4C,EAAD,CAAUhD,KAAMsB,EAAKtB,SAGzBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4C,wBAAyB,CAAEC,OAAQ/B,EAASgC,QAClEjD,EAAAC,EAAAC,cAAA,WACG,IACDF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAwBwC,KAAMX,EAAcY,OAAO,SAASC,IAAI,uBAA7E,SAEK,IACL7C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAwBwC,KAAMb,EAAYc,OAAO,SAASC,IAAI,uBAA3E,kBAnD8BjC,aA8D7BsC,EAAS,+CCxEtBC,EAAAC,EAAAC,EAAA,sBAAAxB,IAAA,IAAAyB,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAGM5B,EAAa,SAAAD,GAAI,OAAI+B,IAAOC,IAAIhC,GAAMiC,OAAOrC,IAAOsC","file":"component---src-templates-post-js-4d32e492fad05f05be51.js","sourcesContent":["import React, { Component } from 'react'\r\nimport kebabCase from 'lodash.kebabcase'\r\nimport { Link } from 'gatsby'\r\n\r\nexport default class PostTags extends Component {\r\n  render() {\r\n    const { tags, size } = this.props\r\n\r\n    return (\r\n      <div className=\"tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link key={tag} style={{ textDecoration: 'none' }} to={`/tags/${kebabCase(tag)}/`}>\r\n              <span className={size}>{tag}</span>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport Layout from '../layout'\r\nimport PostTags from '../components/PostTags'\r\nimport SEO from '../components/SEO'\r\nimport config from '../../data/SiteConfig'\r\nimport { formatDate } from '../utils/global'\r\n\r\nexport default class PostTemplate extends Component {\r\n  render() {\r\n    const { slug } = this.props.pageContext\r\n    const postNode = this.props.data.markdownRemark\r\n    const post = postNode.frontmatter\r\n    let thumbnail\r\n\r\n    if (!post.id) {\r\n      post.id = slug\r\n    }\r\n\r\n    if (!post.category_id) {\r\n      post.category_id = config.postDefaultCategoryID\r\n    }\r\n\r\n    if (post.thumbnail) {\r\n      thumbnail = post.thumbnail.childImageSharp.fixed\r\n    }\r\n\r\n    const date = formatDate(post.date)\r\n    const twitterUrl = `https://twitter.com/search?q=${config.siteUrl}/${post.slug}/`\r\n    const twitterShare = `http://twitter.com/share?text=${encodeURIComponent(post.title)}&url=${\r\n      config.siteUrl\r\n    }/${post.slug}/&via=${config.userTwitter}`\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet>\r\n          <title>{`${post.title} â€“ ${config.siteTitle}`}</title>\r\n        </Helmet>\r\n        <SEO postPath={slug} postNode={postNode} postSEO />\r\n        <article className=\"single container\">\r\n          <header className={`single-header ${!thumbnail ? 'no-thumbnail' : ''}`}>\r\n            {thumbnail ? <Img fixed={post.thumbnail.childImageSharp.fixed} /> : null}\r\n            <div className=\"flex\">\r\n              <h1>{post.title}</h1>\r\n              <div className=\"post-meta\">\r\n                <time className=\"date\">{date}</time>|\r\n                <a className=\"twitter-link\" href={twitterShare} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  Share on Twitter\r\n                </a>\r\n              </div>\r\n              <PostTags tags={post.tags} />\r\n            </div>\r\n          </header>\r\n          <div className=\"post\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n          <div>\r\n            {' '}\r\n            <a className=\"button twitter-button\" href={twitterShare} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Share\r\n            </a>{' '}\r\n            <a className=\"button twitter-button\" href={twitterUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Discuss\r\n            </a>\r\n          </div>\r\n        </article>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        thumbnail {\r\n          childImageSharp {\r\n            fixed(width: 150, height: 150) {\r\n              ...GatsbyImageSharpFixed\r\n            }\r\n          }\r\n        }\r\n        slug\r\n        date\r\n        categories\r\n        tags\r\n        template\r\n      }\r\n      fields {\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`\r\n","import moment from 'moment'\r\nimport config from '../../data/SiteConfig'\r\n\r\nconst formatDate = date => moment.utc(date).format(config.dateFormat)\r\n\r\nexport { formatDate }\r\n"],"sourceRoot":""}